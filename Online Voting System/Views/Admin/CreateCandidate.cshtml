@{
    Layout = "~/Views/Shared/logout_layout.cshtml";
}



@model Online_Voting_System.CandidateDetails



@*@if (Model != null)
{
    <script type="text/javascript">
            $(function () {
                alert("Inserted Customer ID: " + @Model.CandidateNO);
        });

       


        function Showmessage(data) {
            $('#Element').html('Successfully Submitted');
        }
    </script>
}*@
@*@using (Ajax.BeginForm("Action", "Controller", new AjaxOptions { HttpMethod = "POST", OnSuccess = "Showmessage" }))*@
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4> Create Candidate Details |  @Html.ActionLink("Declare Result", "DeclareResult") </h4> 
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*@Html.HiddenFor(model => model.CandidateID)*@
        <div class="form-group">
            @Html.Label("Candidate No", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CandidateNO, new { htmlAttributes = new { @class = "form-control", @placeholder = "Candidate No" } })
                @Html.ValidationMessageFor(model => model.CandidateNO, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Candidate Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CandidateName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Candidate Name" } })
                @Html.ValidationMessageFor(model => model.CandidateName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Adress" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Mobile No", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mobile No" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>

      
        <div class="form-group"> 
            @*@Html.LabelFor(model => model.VoteCount, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.VoteCount)
               
                @*@Html.ValidationMessageFor(model => model.VoteCount, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

}


<table class="table table-striped">
    <thead>
        <tr>
            
            <th scope="col">Candidate ID</th>
            <th scope="col">Candidate Name</th>
            <th scope="col">Address</th>
            <th scope="col">Mobile No.</th>
            @*<th scope="col">No of Votes</th>*@
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        <h3>CANDIDATE DETAILS</h3>



        @foreach (var can in ViewBag.CandidateList)
        {
            <tr>
               
                <td>@can.CandidateNO</td>
                <td>@can.CandidateName</td>
                <td>@can.Address</td>
                <td>@can.MobileNo</td>
                @*<td>@can.VoteCount</td>*@
                <td>
                    @Html.ActionLink("Edit", "EditCandidate", new { id = can.CandidateID }) |
                   
                    @Html.ActionLink("Delete", "DeleteCandidate", new { id = can.CandidateID })
                </td>
            </tr>
        }



    </tbody>
</table>






<div>
    @Html.ActionLink("Back to List", "Index")
</div>
